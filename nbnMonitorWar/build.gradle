buildscript {
	repositories {
		jcenter()
	}

	dependencies {
		classpath 'com.bmuschko:gradle-cargo-plugin:2.7.1'
	}
}

plugins {
	id 'org.springframework.boot' version '2.2.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
}

apply plugin: 'com.bmuschko.cargo'
apply plugin: 'war'

sourceCompatibility = '1.8'


configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

configurations.all {
	exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
//	resolutionStrategy {
//		force 'org.codehaus.groovy:groovy-all:2.5.4'
//	}
}

dependencies {
    implementation project(':shared')   

    implementation "org.mongodb:mongo-java-driver:${mongodbVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation "org.springframework.boot:spring-boot-starter-log4j2"
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-java8time'

    implementation 'org.webjars:webjars-locator-core'
    implementation 'org.webjars.npm:promise-polyfill:8.1.3'
    implementation 'org.webjars.npm:whatwg-fetch:3.4.1'
    implementation 'org.webjars.npm:moment:2.27.0'
    implementation 'org.webjars.npm:chart.js:2.9.3'
	implementation 'org.webjars:datatables:1.10.21'
    implementation 'org.webjars:datatables-plugins:1.10.21'
    implementation 'org.webjars.npm:ie11-custom-properties:4.1.0'
    implementation 'org.webjars.npm:litepicker:1.5.5'
    implementation 'org.webjars:sockjs-client:1.1.2'
    implementation 'org.webjars.bowergithub.stomp-js:stomp-websocket:4.0.8'
    implementation 'org.webjars:bootstrap:4.5.2'
    implementation 'org.webjars:tether:1.4.0'
    implementation 'org.webjars:startbootstrap-sb-admin-2:4.0.6'
    implementation 'org.webjars:jquery:3.5.1'
    implementation 'org.webjars:jquery-ui:1.12.1'
	
	
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

    def cargoVersion = '1.7.10'
    cargo "org.codehaus.cargo:cargo-core-uberjar:$cargoVersion",
          "org.codehaus.cargo:cargo-licensed-dtds:$cargoVersion",
          "org.codehaus.cargo:cargo-ant:$cargoVersion"

		  
}

processResources {
	filesMatching('application.yml') {
		expand(
			'version': project.property('version'),
			'buildTimeStamp': rootProject.startTime,
		)
	}
}

cargoRunLocal.dependsOn assemble
cargoStartLocal.dependsOn assemble
cargoRedeployLocal.dependsOn assemble

cargo {
	containerId = 'tomcat8x'
	deployable {
		context = 'nbnMonitor'
	}

	local {
		installer {
			installUrl = 'https://archive.apache.org/dist/tomcat/tomcat-8/v8.5.38/bin/apache-tomcat-8.5.38.zip'
			downloadDir = file("$buildDir/download")
			extractDir = file("$buildDir/extract")
		}
		outputFile = file("$buildDir/output.log")
		systemProperties {
			property "dataFileRoot", "D:/Dev/nbnMonitor/share/output"
		}

	}
}

bootRun {
	sourceResources sourceSets.main
	args = ["--spring.profiles.active=dev"]
}
