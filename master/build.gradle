import java.text.SimpleDateFormat

plugins {
	id "org.sonarqube" version "3.0" apply false
}

allprojects {
    apply plugin: 'java'

    group = 'me.ineson.monitor_nbn'
    version = '1.0'

    repositories {
        mavenCentral()
        mavenLocal()
        maven { url 'https://repo.springsource.org/release' }
    }
}

ext.junitVersion = '5.6.2'
ext.mongodbVersion = '3.5.0'
ext.springBootVersion = '2.1.10.RELEASE'


subprojects {
	apply plugin: 'groovy'
	apply plugin: 'jacoco'
	apply plugin: 'org.sonarqube'
	
	dependencies {
        implementation 'org.apache.commons:commons-lang3:3.10'
        implementation 'org.apache.logging.log4j:log4j-api:2.13.0'
        implementation 'org.apache.logging.log4j:log4j-core:2.13.0'
        implementation 'com.fasterxml.jackson.core:jackson-core:2.10.2'
        implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.10.2'

		testImplementation "org.spockframework:spock-core:1.3-groovy-2.5"
		testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")

        testRuntimeOnly("org.junit.platform:junit-platform-commons:1.6.2")
        testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
        testRuntimeOnly("org.junit.vintage:junit-vintage-engine:${junitVersion}")
	}
	
    test {
        useJUnitPlatform()
        finalizedBy jacocoTestReport
    }
	
    jacocoTestReport {
        reports {
            xml.enabled true
            csv.enabled false
            html.destination file("${buildDir}/jacocoHtml")
        }
    }
	
    sonarqube {
        properties {
            property "sonar.projectName", "monitorNbn - ${project.name}"
        }
	}
}

def root = project.rootProject
if (!root.hasProperty("startTime")) {
	Date today = new Date ()
	SimpleDateFormat df = new SimpleDateFormat ("dd-MMM-yyyy hh:mm:ss")
	ext.startTime = df.format (today)
}
